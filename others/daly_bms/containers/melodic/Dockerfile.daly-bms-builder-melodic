FROM robotnik/robotnik-ros:builder-melodic-0.9.2 AS pkg-install-builder

USER root

# Extra packages
ARG ext_src_path=$ck_dir/ext_pkg

ENV DEBIAN_FRONTEND noninteractive

#Ros packages for build
ARG req_file=build-ros-requirements.txt
ARG req_src=containers/src/$req_file
ARG req_dst=/tmp/$req_file
COPY $req_src $req_dst

RUN apt-get update \
	&& apt-get install -q -y \
	--no-install-recommends \
		$(eval "echo $(cat $req_dst | xargs)") \
	&& apt-get clean -q -y \
	&& apt-get autoremove -q -y \
	&& rm -rf /var/lib/apt/lists/* \
	&& rm $req_dst

# Change of user
USER $user_name

WORKDIR $ck_dir

ENV user_name=$user_name
ENV user_home=$user_home
ENV ck_dir=$ck_dir
ENV ck_src_dir=$ck_src_dir
ENV ext_src_path=$ext_src_path

RUN mkdir -p $ext_src_path

FROM pkg-install-builder AS base-builder

USER $user_name

WORKDIR $ck_dir

RUN rosdep update

ARG repo_file=public.repos

COPY --chown=$user_name \
	containers/repos/$repo_file \
	/tmp/

ARG repo_file_list_to_use=/tmp/$repo_file
ARG fresh_download_of_git_repos=no

RUN true \
	&& vcs import \
		--input $repo_file_list_to_use \
		--shallow \
	&& rosdep update \
	&& sudo apt-get clean -q -y \
	&& sudo apt-get autoremove -q -y \
	&& sudo rm -rf /var/lib/apt/lists/*

RUN true \
	&& touch $ck_src_dir/rosmon/rqt_rosmon/CATKIN_IGNORE \
	&& touch $ck_src_dir/rosmon/rosmon/CATKIN_IGNORE

COPY . $ck_src_dir/daly_bms

RUN true \
	&& echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections \
	&& sudo apt-get update \
	&& rosdep install -t build_export -t build -t buildtool \
		--from-paths src \
		--ignore-src \
		--rosdistro=${ROS_DISTRO} \
		-y -r \
	&& sudo apt-get clean -q -y \
	&& sudo apt-get autoremove -q -y \
	&& sudo rm -rf /var/lib/apt/lists/*

FROM base-builder AS batt-builder

# Battery pkgs
ARG batt_dir=$ck_dir
ARG batt_src_dir=${batt_dir}/src
ARG batt_output_pkg=$ck_dir/batt_pkgs.tar.gz

RUN mkdir -p $batt_src_dir
WORKDIR $batt_dir

RUN source /opt/ros/${ROS_DISTRO}/setup.sh \
	&& catkin config --install \
	&& catkin build \
	&& tar -cvzf $batt_output_pkg install

FROM alpine:3.15.0 as builder

RUN set -eux; \
    apk add --no-cache pigz;
ENV ck_dir=/home/ros/catkin_ws
ARG dst_dir=/data
RUN mkdir -p \
	${ck_dir} \
	${dst_dir}


ARG batt_input_pkg=${ck_dir}/batt_pkgs.tar.gz
ARG batt_output_pkg=${dst_dir}/batt_pkgs.tar.gz
COPY --from=batt-builder $batt_input_pkg $batt_output_pkg

